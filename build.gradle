buildscript {
    ext {
        restdocsApiSpecVersion = '0.16.2'
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'

    id 'org.hidetake.swagger.generator' version '2.18.2'

    //restdocs-api-spec → restdocs extension  포함함
    id 'com.epages.restdocs-api-spec' version "${restdocsApiSpecVersion}"

}

group = 'org.guzzing'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

    //spring rest docs
    testImplementation "com.epages:restdocs-api-spec-restassured:${restdocsApiSpecVersion}"
    testImplementation 'io.rest-assured:rest-assured'

    //swagger
    swaggerUI 'org.webjars:swagger-ui:4.11.1'

    //redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    //webflux
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // Spring Security 추가
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    testImplementation "org.springframework.security:spring-security-test"

    //JWT 토큰 생성
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
    implementation group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
    implementation group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'

}
tasks.named('test') {
    useJUnitPlatform()
}

swaggerSources {
    sample {
        setInputFile(file("${project.buildDir}/api-spec/openapi3.yml"))
    }
}

openapi3 {
    setServer("http://localhost:8080") // API 요청을 보낼 서버 주소 설정
    title = "restdocs-swagger API Documentation" // API 문서 제목
    description = "Spring REST Docs with SwaggerUI." // API 문서 설명
    version = "0.0.1" // API 문서 버전
    outputFileNamePrefix = "openapi3"
    format = "yml" // API 문서 출력 포맷 (default = JSON)
}




